// <auto-generated />
using System;
using Infra.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infra.Migrations
{
    [DbContext(typeof(ComandasContext))]
    partial class ComandasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dominio.Entity.Comanda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("Aberta");

                    b.Property<DateTime?>("DtAlteracao");

                    b.Property<DateTime>("DtCriacao");

                    b.Property<DateTime?>("Fechamento");

                    b.Property<string>("Nome");

                    b.Property<string>("Numero");

                    b.Property<int>("Status");

                    b.Property<string>("UsuarioAlteracao");

                    b.Property<string>("UsuarioCriacao");

                    b.HasKey("Id");

                    b.ToTable("Comandas");

                    b.HasData(
                        new { Id = new Guid("88bedef3-ef7a-47b7-ad92-030615908d23"), DtCriacao = new DateTime(2020, 4, 30, 21, 47, 33, 261, DateTimeKind.Local), Numero = "BDZ1000", Status = 0, UsuarioCriacao = "EF" },
                        new { Id = new Guid("ee4e6bb1-49e9-43e2-85d9-8a50c58a693b"), DtCriacao = new DateTime(2020, 4, 30, 21, 47, 33, 261, DateTimeKind.Local), Numero = "BDZ1001", Status = 0, UsuarioCriacao = "EF" },
                        new { Id = new Guid("0c5ded1c-594c-4c4c-9cf1-8652c010197f"), DtCriacao = new DateTime(2020, 4, 30, 21, 47, 33, 261, DateTimeKind.Local), Numero = "BDZ1002", Status = 0, UsuarioCriacao = "EF" },
                        new { Id = new Guid("d67ab492-751b-4343-aa01-282c93fd2794"), DtCriacao = new DateTime(2020, 4, 30, 21, 47, 33, 261, DateTimeKind.Local), Numero = "BDZ1003", Status = 0, UsuarioCriacao = "EF" },
                        new { Id = new Guid("2ac5722c-7d9c-4108-9176-d6f0d609002e"), DtCriacao = new DateTime(2020, 4, 30, 21, 47, 33, 261, DateTimeKind.Local), Numero = "BDZ1004", Status = 0, UsuarioCriacao = "EF" },
                        new { Id = new Guid("344722c0-0be6-4a05-bb11-eb66a1e96b1a"), DtCriacao = new DateTime(2020, 4, 30, 21, 47, 33, 261, DateTimeKind.Local), Numero = "BDZ1005", Status = 0, UsuarioCriacao = "EF" },
                        new { Id = new Guid("03fece18-1ce4-4fa2-8225-13e50191389b"), DtCriacao = new DateTime(2020, 4, 30, 21, 47, 33, 261, DateTimeKind.Local), Numero = "BDZ1006", Status = 0, UsuarioCriacao = "EF" },
                        new { Id = new Guid("a6afe3d2-67ed-4309-9f8d-4df806aa7106"), DtCriacao = new DateTime(2020, 4, 30, 21, 47, 33, 261, DateTimeKind.Local), Numero = "BDZ1007", Status = 0, UsuarioCriacao = "EF" },
                        new { Id = new Guid("88ee7157-062d-4cd0-b2b0-a53f224fac1e"), DtCriacao = new DateTime(2020, 4, 30, 21, 47, 33, 261, DateTimeKind.Local), Numero = "BDZ1008", Status = 0, UsuarioCriacao = "EF" },
                        new { Id = new Guid("6e8bab14-a444-4862-8f10-e9cb447e7ad4"), DtCriacao = new DateTime(2020, 4, 30, 21, 47, 33, 261, DateTimeKind.Local), Numero = "BDZ1009", Status = 0, UsuarioCriacao = "EF" },
                        new { Id = new Guid("f5c402be-6a2e-4d82-923e-bc0b32b4fcda"), DtCriacao = new DateTime(2020, 4, 30, 21, 47, 33, 261, DateTimeKind.Local), Numero = "BDZ1010", Status = 0, UsuarioCriacao = "EF" }
                    );
                });

            modelBuilder.Entity("Dominio.Entity.Conta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ComandaId");

                    b.Property<DateTime?>("DtAlteracao");

                    b.Property<DateTime>("DtCriacao");

                    b.Property<int>("FormaPagamento");

                    b.Property<string>("Garcon");

                    b.Property<decimal>("Gorgeta");

                    b.Property<int>("Mesa");

                    b.Property<string>("UsuarioAlteracao");

                    b.Property<string>("UsuarioCriacao");

                    b.Property<decimal>("Valor");

                    b.HasKey("Id");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("Dominio.Entity.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.Property<short>("Disponivel");

                    b.Property<DateTime?>("DtAlteracao");

                    b.Property<DateTime>("DtCriacao");

                    b.Property<string>("Foto");

                    b.Property<decimal>("Preco");

                    b.Property<string>("UsuarioAlteracao");

                    b.Property<string>("UsuarioCriacao");

                    b.HasKey("Id");

                    b.ToTable("Itens");

                    b.HasData(
                        new { Id = new Guid("4e130d75-7885-429f-833e-82650c29777f"), Descricao = "Cerveja", Disponivel = (short)0, DtCriacao = new DateTime(2020, 4, 30, 21, 47, 33, 260, DateTimeKind.Local), Preco = 5m, UsuarioCriacao = "EF" },
                        new { Id = new Guid("945d9ea1-5830-487e-9fcd-12260418ef62"), Descricao = "Vinho", Disponivel = (short)0, DtCriacao = new DateTime(2020, 4, 30, 21, 47, 33, 260, DateTimeKind.Local), Preco = 25m, UsuarioCriacao = "EF" },
                        new { Id = new Guid("ac578104-0d93-459b-b276-0089f8614216"), Descricao = "Porção Fritas", Disponivel = (short)0, DtCriacao = new DateTime(2020, 4, 30, 21, 47, 33, 260, DateTimeKind.Local), Preco = 35m, UsuarioCriacao = "EF" },
                        new { Id = new Guid("c5d55d10-03f2-4242-805c-df07a2f7a3d1"), Descricao = "Porção Pastel", Disponivel = (short)0, DtCriacao = new DateTime(2020, 4, 30, 21, 47, 33, 260, DateTimeKind.Local), Preco = 45m, UsuarioCriacao = "EF" },
                        new { Id = new Guid("a8838f9f-81f8-4de4-839c-6dc1b1a3271c"), Descricao = "Suco", Disponivel = (short)0, DtCriacao = new DateTime(2020, 4, 30, 21, 47, 33, 260, DateTimeKind.Local), Preco = 5m, UsuarioCriacao = "EF" },
                        new { Id = new Guid("874c2ef1-812c-4f6b-bc76-58ced3a1eb4e"), Descricao = "Água", Disponivel = (short)0, DtCriacao = new DateTime(2020, 4, 30, 21, 47, 33, 260, DateTimeKind.Local), Preco = 5m, UsuarioCriacao = "EF" }
                    );
                });

            modelBuilder.Entity("Dominio.Entity.ItemComanda", b =>
                {
                    b.Property<Guid>("ComandaId");

                    b.Property<Guid>("ItemId");

                    b.Property<DateTime?>("DtAlteracao");

                    b.Property<DateTime>("DtCriacao");

                    b.Property<Guid>("Id");

                    b.Property<int>("Quantidade");

                    b.Property<string>("UsuarioAlteracao");

                    b.Property<string>("UsuarioCriacao");

                    b.HasKey("ComandaId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemComanda");
                });

            modelBuilder.Entity("Dominio.Entity.Nota", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ComandaId");

                    b.Property<long>("Cpf");

                    b.Property<DateTime?>("DtAlteracao");

                    b.Property<DateTime>("DtCriacao");

                    b.Property<string>("UsuarioAlteracao");

                    b.Property<string>("UsuarioCriacao");

                    b.Property<decimal>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("ComandaId");

                    b.ToTable("Nota");
                });

            modelBuilder.Entity("Dominio.Entity.ItemComanda", b =>
                {
                    b.HasOne("Dominio.Entity.Comanda", "Comanda")
                        .WithMany("Itens")
                        .HasForeignKey("ComandaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Dominio.Entity.Item", "Item")
                        .WithMany("Comandas")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Dominio.Entity.Nota", b =>
                {
                    b.HasOne("Dominio.Entity.Comanda", "Comanda")
                        .WithMany()
                        .HasForeignKey("ComandaId");
                });
#pragma warning restore 612, 618
        }
    }
}
